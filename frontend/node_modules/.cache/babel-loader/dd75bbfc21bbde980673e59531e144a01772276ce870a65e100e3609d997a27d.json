{"ast":null,"code":"var _jsxFileName = \"/Users/harshgupta/Desktop/finance management tool/frontend/src/Components/Chart/Chart.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { dateFormat } from '../../utils/dateFormat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nfunction Chart() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n\n  // Prepare data for chart\n  const incomeData = incomes.map(_ref => {\n    let {\n      date,\n      amount\n    } = _ref;\n    return {\n      date: dateFormat(date),\n      amount\n    };\n  });\n  const expenseData = expenses.map(_ref2 => {\n    let {\n      date,\n      amount\n    } = _ref2;\n    return {\n      date: dateFormat(date),\n      amount\n    };\n  });\n  const data = {\n    labels: incomeData.map(inc => inc.date),\n    // Labels are based on income dates\n    datasets: [{\n      label: 'Income',\n      data: incomeData.map(inc => inc.amount),\n      backgroundColor: 'rgba(0, 255, 0, 0.5)',\n      // Semi-transparent green\n      borderColor: 'green',\n      borderWidth: 2,\n      tension: 0.2,\n      // Smooth curves\n      fill: false // Don't fill the area under the line\n    }, {\n      label: 'Expenses',\n      data: expenseData.map(exp => exp.amount),\n      backgroundColor: 'rgba(255, 0, 0, 0.5)',\n      // Semi-transparent red\n      borderColor: 'red',\n      borderWidth: 2,\n      tension: 0.2,\n      // Smooth curves\n      fill: false // Don't fill the area under the line\n    }]\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChartStyled, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(Chart, \"PHep46UhTemPLuSa3MfIkZAuTiE=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Chart;\nconst ChartStyled = styled.div`\n    background: #FCF6F9;\n    border: 2px solid #FFFFFF;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 1rem;\n    border-radius: 20px;\n    height: 100%;\n`;\n_c2 = ChartStyled;\nexport default Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"ChartStyled\");","map":{"version":3,"names":["React","Chart","ChartJs","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","Line","styled","useGlobalContext","dateFormat","register","incomes","expenses","incomeData","map","date","amount","expenseData","data","labels","inc","datasets","label","backgroundColor","borderColor","borderWidth","tension","fill","exp","ChartStyled","div"],"sources":["/Users/harshgupta/Desktop/finance management tool/frontend/src/Components/Chart/Chart.js"],"sourcesContent":["import React from 'react';\nimport { Chart as ChartJs, \n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n} from 'chart.js';\n\nimport { Line } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { dateFormat } from '../../utils/dateFormat';\n\nChartJs.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n);\n\nfunction Chart() {\n    const { incomes, expenses } = useGlobalContext();\n\n    // Prepare data for chart\n    const incomeData = incomes.map(({ date, amount }) => ({\n        date: dateFormat(date),\n        amount,\n    }));\n\n    const expenseData = expenses.map(({ date, amount }) => ({\n        date: dateFormat(date),\n        amount,\n    }));\n\n    const data = {\n        labels: incomeData.map((inc) => inc.date), // Labels are based on income dates\n        datasets: [\n            {\n                label: 'Income',\n                data: incomeData.map((inc) => inc.amount),\n                backgroundColor: 'rgba(0, 255, 0, 0.5)', // Semi-transparent green\n                borderColor: 'green',\n                borderWidth: 2,\n                tension: 0.2, // Smooth curves\n                fill: false, // Don't fill the area under the line\n            },\n            {\n                label: 'Expenses',\n                data: expenseData.map((exp) => exp.amount),\n                backgroundColor: 'rgba(255, 0, 0, 0.5)', // Semi-transparent red\n                borderColor: 'red',\n                borderWidth: 2,\n                tension: 0.2, // Smooth curves\n                fill: false, // Don't fill the area under the line\n            }\n        ]\n    };\n\n    return (\n        <ChartStyled>\n            <Line data={data} />\n        </ChartStyled>\n    );\n}\n\nconst ChartStyled = styled.div`\n    background: #FCF6F9;\n    border: 2px solid #FFFFFF;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 1rem;\n    border-radius: 20px;\n    height: 100%;\n`;\n\nexport default Chart;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,IAAIC,OAAO,EACrBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,QACP,UAAU;AAEjB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,UAAU,QAAQ,wBAAwB;AAAC;AAEpDZ,OAAO,CAACa,QAAQ,CACZZ,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,CACb;AAED,SAAST,KAAK,GAAG;EAAA;EACb,MAAM;IAAEe,OAAO;IAAEC;EAAS,CAAC,GAAGJ,gBAAgB,EAAE;;EAEhD;EACA,MAAMK,UAAU,GAAGF,OAAO,CAACG,GAAG,CAAC;IAAA,IAAC;MAAEC,IAAI;MAAEC;IAAO,CAAC;IAAA,OAAM;MAClDD,IAAI,EAAEN,UAAU,CAACM,IAAI,CAAC;MACtBC;IACJ,CAAC;EAAA,CAAC,CAAC;EAEH,MAAMC,WAAW,GAAGL,QAAQ,CAACE,GAAG,CAAC;IAAA,IAAC;MAAEC,IAAI;MAAEC;IAAO,CAAC;IAAA,OAAM;MACpDD,IAAI,EAAEN,UAAU,CAACM,IAAI,CAAC;MACtBC;IACJ,CAAC;EAAA,CAAC,CAAC;EAEH,MAAME,IAAI,GAAG;IACTC,MAAM,EAAEN,UAAU,CAACC,GAAG,CAAEM,GAAG,IAAKA,GAAG,CAACL,IAAI,CAAC;IAAE;IAC3CM,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,QAAQ;MACfJ,IAAI,EAAEL,UAAU,CAACC,GAAG,CAAEM,GAAG,IAAKA,GAAG,CAACJ,MAAM,CAAC;MACzCO,eAAe,EAAE,sBAAsB;MAAE;MACzCC,WAAW,EAAE,OAAO;MACpBC,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE,GAAG;MAAE;MACdC,IAAI,EAAE,KAAK,CAAE;IACjB,CAAC,EACD;MACIL,KAAK,EAAE,UAAU;MACjBJ,IAAI,EAAED,WAAW,CAACH,GAAG,CAAEc,GAAG,IAAKA,GAAG,CAACZ,MAAM,CAAC;MAC1CO,eAAe,EAAE,sBAAsB;MAAE;MACzCC,WAAW,EAAE,KAAK;MAClBC,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE,GAAG;MAAE;MACdC,IAAI,EAAE,KAAK,CAAE;IACjB,CAAC;EAET,CAAC;;EAED,oBACI,QAAC,WAAW;IAAA,uBACR,QAAC,IAAI;MAAC,IAAI,EAAET;IAAK;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACV;AAEtB;AAAC,GA3CQtB,KAAK;EAAA,QACoBY,gBAAgB;AAAA;AAAA,KADzCZ,KAAK;AA6Cd,MAAMiC,WAAW,GAAGtB,MAAM,CAACuB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAPID,WAAW;AASjB,eAAejC,KAAK;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}